// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Settings /> renders correctly while closed 1`] = `
<aside
  className="settings closed"
>
  <fieldset>
    <div
      className="settings-field"
    >
      <label
        htmlFor="grain"
      >
        Grain Time
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="grain"
          name="grain"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="number"
          value={5}
        />
        <span
          className="unit"
        >
          s
        </span>
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="quietCutoff"
      >
        Quietness Threshold
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="quietCutoff"
          name="quietCutoff"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="number"
          value={10}
        />
        <span
          className="unit"
        >
          %
        </span>
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="play"
      >
        Play/Pause Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="play"
          name="play"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="p"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="next"
      >
        Next Grain Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="next"
          name="next"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="e"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="previous"
      >
        Previous Grain Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="previous"
          name="previous"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="q"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="nextTrack"
      >
        Next Track Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="nextTrack"
          name="nextTrack"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="j"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="previousTrack"
      >
        Previous Track Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="previousTrack"
          name="previousTrack"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="k"
        />
        <span
          className="unit"
        />
      </div>
    </div>
  </fieldset>
</aside>
`;

exports[`<Settings /> renders correctly while open 1`] = `
<aside
  className="settings open"
>
  <fieldset>
    <div
      className="settings-field"
    >
      <label
        htmlFor="grain"
      >
        Grain Time
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="grain"
          name="grain"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="number"
          value={5}
        />
        <span
          className="unit"
        >
          s
        </span>
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="quietCutoff"
      >
        Quietness Threshold
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="quietCutoff"
          name="quietCutoff"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="number"
          value={10}
        />
        <span
          className="unit"
        >
          %
        </span>
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="play"
      >
        Play/Pause Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="play"
          name="play"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="p"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="next"
      >
        Next Grain Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="next"
          name="next"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="e"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="previous"
      >
        Previous Grain Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="previous"
          name="previous"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="q"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="nextTrack"
      >
        Next Track Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="nextTrack"
          name="nextTrack"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="j"
        />
        <span
          className="unit"
        />
      </div>
    </div>
    <div
      className="settings-field"
    >
      <label
        htmlFor="previousTrack"
      >
        Previous Track Key
      </label>
      <div
        className="entry-area"
      >
        <input
          className="input"
          id="previousTrack"
          name="previousTrack"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type={undefined}
          value="k"
        />
        <span
          className="unit"
        />
      </div>
    </div>
  </fieldset>
</aside>
`;
